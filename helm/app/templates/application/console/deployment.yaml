{{- with (include "service.resolved" (dict "root" $ "service_name" "console") | fromYaml) -}}
{{- if .enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $.Release.Name }}-console
  labels:
    {{- include "chart.labels" $ | nindent 4 }}
    app.kubernetes.io/component: console
    app.service: {{ $.Release.Name }}-console
  annotations:
    argocd.argoproj.io/sync-wave: "15"
spec:
  {{- with (pick . "replicas") }}
  {{- . | toYaml | nindent 2 }}
  {{- end }}
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app.service: {{ $.Release.Name }}-console
  template:
    metadata:
      labels:
        {{- include "chart.selectors" $ | nindent 8 }}
        app.kubernetes.io/component: console
        app.service: {{ $.Release.Name }}-console
    spec:
      containers:
      - env:
        {{- range $key, $value := (mergeOverwrite (dict) .environment .environment_dynamic) }}
        - name: {{ $key | quote }}
        {{- if kindIs "string" $value }}
          value: {{ tpl $value $ | quote }}
        {{- else if kindIs "map" $value }}
          {{ tpl ($value | toYaml) $ | nindent 10 }}
        {{- else }}
          value: {{ $value | quote }}
        {{- end }}
        {{- end }}
        {{- if or .environment_secrets .envFrom }}
        envFrom:
          {{- if .environment_secrets }}
          - secretRef:
              name: {{ $.Release.Name }}-console
          {{- end }}
          {{- with .envFrom }}
          {{- tpl (. | toYaml) $ | nindent 10 }}
          {{- end }}
        {{- end }}
        image: {{ .image }}
        imagePullPolicy: Always
        name: console
        resources:
          limits:
            memory: {{ .resources.memory }}
          requests:
            memory: {{ .resources.memory }}
        readinessProbe:
          exec:
            command:
            - app
            - state
          initialDelaySeconds: 20
          periodSeconds: 10
        volumeMounts:
        {{- if not (eq "" (include "application.volumeMounts.console" $)) }}
        {{- include "application.volumeMounts.console" $ | indent 8 }}
        {{- else }} []
        {{- end }}
{{- if $.Values.docker.image_pull_config }}
      imagePullSecrets:
      - name: {{ $.Release.Name }}-image-pull-config
{{- end }}
      restartPolicy: Always
      enableServiceLinks: false
      volumes:
      {{- if not (eq "" (include "application.volumes.console" $)) }}
      {{- include "application.volumes.console" $ | indent 6 }}
      {{- else }} []
      {{- end }}
status: {}
{{- end }}
{{- end }}
