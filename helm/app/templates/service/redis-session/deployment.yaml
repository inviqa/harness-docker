{{- with index .Values.services "redis-session" -}}
{{- if .enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $.Release.Name }}-redis-session
  annotations:
    argocd.argoproj.io/sync-wave: "4"
  labels:
    {{- include "chart.labels" $ | nindent 4 }}
    app.kubernetes.io/component: redis-session
    app.service: {{ $.Release.Name }}-redis-session
spec:
  replicas: 1
  selector:
    matchLabels:
      app.service: {{ $.Release.Name }}-redis-session
{{- if index $.Values.persistence "redis-session" "enabled" }}
  strategy:
    type: Recreate
{{- end }}
  template:
    metadata:
      labels:
        {{- include "chart.selectors" $ | nindent 8 }}
        app.kubernetes.io/component: redis-session
        app.service: {{ $.Release.Name }}-redis-session
    spec:
      containers:
      - name: redis-session
        {{- include "service.environment" (dict "root" $ "serviceName" "redis-session" "service" .) | nindent 8 }}
        args:
        - redis-server
        {{- range $var, $value := .config.options }}
        {{- range $optValue := kindIs "slice" $value | ternary $value (list $value) }}
        - {{ print "--" $var | quote }}
        {{- range $arrayValue := kindIs "slice" $optValue | ternary $optValue (list $optValue) }}
        - {{ $arrayValue | quote }}
        {{- end }}
        {{- end }}
        {{- end }}
        image: {{ .image | quote }}
        imagePullPolicy: Always
        ports:
        - containerPort: 6379
        resources:
          limits:
            memory: {{ .resources.memory }}
          requests:
            {{- with (.resources | dig "cpu" "request" nil) }}
            cpu: {{ . }}
            {{- end }}
            memory: {{ .resources.memory }}
        readinessProbe:
          tcpSocket:
            port: 6379
          initialDelaySeconds: 5
          periodSeconds: 10
        volumeMounts:
        - name: redis-data
          mountPath: /data
      restartPolicy: Always
      volumes:
      - name: redis-data
{{- if index $.Values.persistence "redis-session" "enabled" }}
        persistentVolumeClaim:
          claimName: {{ tpl (index $.Values.persistence "redis-session" "claimName" | default "") $ | default (print $.Release.Name "-redis-session") | quote }}
{{- else }}
        emptyDir: {}
{{- end }}
status: {}
{{- end }}
{{- end }}
