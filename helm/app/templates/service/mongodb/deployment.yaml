{{- with .Values.services.mongodb -}}
{{- if .enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $.Release.Name }}-mongodb
  annotations:
    argocd.argoproj.io/sync-wave: "4"
  labels:
    {{- include "chart.labels" $ | nindent 4 }}
    app.kubernetes.io/component: mongodb
    app.service: {{ $.Release.Name }}-mongodb
spec:
  replicas: 1
  selector:
    matchLabels:
      app.service: {{ $.Release.Name }}-mongodb
{{- if $.Values.persistence.mongodb.enabled }}
  strategy:
    type: Recreate
{{- end }}
  template:
    metadata:
      labels:
        {{- include "chart.labels" $ | nindent 8 }}
        app.kubernetes.io/component: mongodb
        app.service: {{ $.Release.Name }}-mongodb
    spec:
      containers:
      - name: mongodb
        {{- include "service.environment" (dict "root" $ "serviceName" "mongodb" "service" .) | nindent 8 }}
        image: {{ .image | quote }}
        imagePullPolicy: Always
        ports:
        - containerPort: 27017
        resources:
          limits:
            memory: {{ .resources.memory }}
          requests:
            {{- with (.resources | dig "cpu" "request" nil) }}
            cpu: {{ . }}
            {{- end }}
            memory: {{ .resources.memory }}
        readinessProbe:
          tcpSocket:
            port: 27017
          initialDelaySeconds: 5
          periodSeconds: 10
        volumeMounts:
        - name: data-db
          mountPath: /data/db
      restartPolicy: Always
      volumes:
      - name: data-db
{{- if $.Values.persistence.mongodb.enabled }}
        persistentVolumeClaim:
          claimName: {{ include "persistence.claimName" (dict "root" $ "name" "mongodb") | quote }}
{{- else }}
        emptyDir: {}
{{- end }}
status: {}
{{- end }}
{{- end }}
