{{- with .Values.services.opensearch -}}
{{- if .enabled -}}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ $.Release.Name }}-opensearch
  annotations:
    argocd.argoproj.io/sync-wave: "4"
  labels:
    {{- include "chart.labels" $ | nindent 4 }}
    app.kubernetes.io/component: opensearch
    app.service: {{ $.Release.Name }}-opensearch
spec:
  {{- with (pick . "replicas" "revisionHistoryLimit" "podManagementPolicy") }}
  {{- . | toYaml | nindent 2 }}
  {{- end }}
  selector:
    matchLabels:
      app.service: {{ $.Release.Name }}-opensearch
  serviceName: {{ $.Release.Name }}-opensearch-headless
  template:
    metadata:
      labels:
        {{- include "chart.selectors" $ | nindent 8 }}
        app.kubernetes.io/component: opensearch
        app.service: {{ $.Release.Name }}-opensearch
    spec:
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
      containers:
      - name: opensearch
        {{- include "service.environment" (dict "root" $ "serviceName" "opensearch" "service" .) | nindent 8 }}
        image: {{ .image | quote }}
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 9200
        resources:
          limits:
            memory: {{ .resources.memory }}
          requests:
            {{- with (.resources | dig "cpu" "request" nil) }}
            cpu: {{ . }}
            {{- end }}
            memory: {{ .resources.memory }}
        startupProbe:
          tcpSocket:
            port: http
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 3
            failureThreshold: 30
        readinessProbe:
          tcpSocket:
            port: http
            periodSeconds: 5
            timeoutSeconds: 3
        volumeMounts:
        - name: {{ include "persistence.claimName" (dict "root" $ "name" "opensearch-data") | quote }}
          mountPath: /usr/share/opensearch/data
      restartPolicy: Always
      topologySpreadConstraints: {{- (include "pod.topologySpreadConstraints" (dict "root" $ "serviceName" "opensearch" "service" .)) | nindent 8 }}
      volumes:
      - name: {{ include "persistence.claimName" (dict "root" $ "name" "opensearch-data") | quote }}
        emptyDir: {}
{{- if and $.Values.persistence.enabled $.Values.persistence.opensearch.enabled }}
  volumeClaimTemplates:
    - {{ include "statefulSet.volumeClaimTemplate" (dict "root" $ "name" "opensearch-data" "serviceName" "opensearch") | nindent 8 }}
{{- end }}
{{- end }}
{{- end }}
