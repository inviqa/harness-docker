{% if @('pipeline.publish.enabled') %}
        stage('Publish') {
{% set env = @('pipeline.publish.environment') %}
{% set cluster = @('pipeline.publish.chart.default_cluster') %}
{% set docker_registry_credential_id = @('docker.registry.credential_id') %}
{% set ssh_credential_id = @('pipeline.clusters.' ~ cluster ~ '.git.ssh_credential_id') %}
{% if env or docker_registry_credential_id or ssh_credential_id %}
            environment {
{% for key, value in env %}
                {{ key }} = {{ value }}
{% endfor %}
{% if docker_registry_credential_id %}
                DOCKER_REGISTRY_CREDS = credentials('{{ docker_registry_credential_id }}')
{% endif %}
{% if ssh_credential_id %}
                WS_APP_PUBLISH_CHART_SSH_PRIVATE_KEY = credentials('{{ ssh_credential_id }}')
{% endif %}
            }
{% endif %}
            when {
                not { triggeredBy 'TimerTrigger' }
                anyOf {
{% for branch in @('pipeline.publish.branches') %}
                    branch '{{ branch }}'
{% endfor %}
{% if @('pipeline.qa.enabled') %}
                    branch '{{ @('pipeline.qa.branch') }}'
{% endif %}
{% if @('pipeline.preview.enabled') %}
{% if @('pipeline.preview.pull_request_labels') %}
                    expression {
                        return env.CHANGE_ID && {{ @('pipeline.preview.pull_request_labels') | json_encode }}.any { pullRequest.labels.contains(it) }
                    }
{% endif %}
{% for branch in @('pipeline.preview.target_branches') %}
                    changeRequest target: '{{ branch }}'
{% endfor %}
{% endif %}
                }
            }
            steps {
                milestone(50)
                sh 'ws app publish'
{% if @('pipeline.publish.chart.enabled') %}
                lock(resource: '{{ @('pipeline.clusters.' ~ cluster ~ '.git.repository') }}', inversePrecedence: true) {
                    sh 'ws app publish chart "{{ cluster }}" "${GIT_BRANCH}" "{{ @('workspace.name') }} build artifact ${GIT_COMMIT}"'
                }
{% endif %}
            }
            post { failure { script { failureMessages << 'Publish' } } }
        }
{% endif %}
