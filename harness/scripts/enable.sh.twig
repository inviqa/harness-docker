#!/usr/bin/env bash

# shellcheck disable=SC2206
COMPOSE_BIN=($COMPOSE_BIN)

service_configured()
{
    "${COMPOSE_BIN[@]}" config --services | grep --quiet -Fxe "$1"
}

CONSOLE_CONFIGURED="$(service_configured console && echo "true" || echo "false")"

console_enabled()
{
    if [ "$APP_BUILD" = dynamic ]; then
        [ -f .my127ws/.flag-console-built ]
    else
        [ -n "$("${COMPOSE_BIN[@]}" ps --quiet --all console)" ]
    fi
}

enable_all()
{
    local IS_BUILT=no
    local HAS_FLAG=no

    if [ -f .my127ws/.flag-built ]; then
        HAS_FLAG=yes
        IS_BUILT=yes
        # If the containers no longer exist, we need to rebuild them
        if [ -z "$("${COMPOSE_BIN[@]}" ps --quiet --all)" ]; then
            IS_BUILT=no
        fi
    fi

    if [ "$APP_BUILD" = dynamic ] && console_enabled && [ -z "$("${COMPOSE_BIN[@]}" ps --quiet --all console)" ]; then
        rm .my127ws/.flag-console-built
    fi

    passthru ws networks external
    if [ "$IS_BUILT" = no ]; then
        if [ "$HAS_FLAG" = no ]; then
            # remove all services, keeping console if considered built
            if [ "$CONSOLE_CONFIGURED" == true ] && console_enabled; then
                # shellcheck disable=SC2143
                if [ -n "$("${COMPOSE_BIN[@]}" ps --services | grep -v -Fxe console)" ]; then
                    passthru "${COMPOSE_BIN[*]}  ps --services | grep -v -Fxe console | xargs ${COMPOSE_BIN[*]} rm --force --stop --"
                fi
            else
                passthru "${COMPOSE_BIN[@]}" down
            fi
        fi

        if [ "$CONSOLE_CONFIGURED" == true ] && [ "$HAS_ASSETS" = yes ]; then
            ws assets download
        fi

        "$APP_BUILD"

        initial_start

        touch .my127ws/.flag-built
    else
        if [ "$APP_BUILD" = dynamic ] && [ "$USE_MUTAGEN" = yes ]; then
            passthru ws mutagen resume
        fi

        passthru "${COMPOSE_BIN[@]}" up -d
        if [ "$CONSOLE_CONFIGURED" == true ]; then
            passthru "${COMPOSE_BIN[@]}" exec -T -u "${CODE_OWNER}" console app welcome
        fi
    fi
}

enable_console() {
    if [ "$CONSOLE_CONFIGURED" == false ]; then
        echo "error: console is not configured to be enabled" >&2
        exit 1
    fi

    if [ "$APP_BUILD" = dynamic ] && console_enabled && [ -z "$("${COMPOSE_BIN[@]}" ps --quiet --all console)" ]; then
        rm .my127ws/.flag-console-built
    fi

    passthru ws networks external
    passthru ws external-images pull console
    "${APP_BUILD}_console"
}

dynamic_console()
{
    if console_enabled; then
        # ensure it is started
        if [ -z "$("${COMPOSE_BIN[@]}" ps --quiet --all console)" ]; then
            passthru "${COMPOSE_BIN[@]}" up -d console
        fi
        return;
    fi

    # we synchronise then stop mutagen to avoid impacting CPU usage during the build
    if [ "$USE_MUTAGEN" = yes ]; then
        passthru ws mutagen start
        passthru ws mutagen pause
    fi

    find .my127ws/docker/image/ -type d ! -perm u+rwx,go+rx,o-w -exec chmod u+rwx,go+rx,o-w {} +

    passthru "${COMPOSE_BIN[@]}" up --build -d console
    passthru "${COMPOSE_BIN[@]}" exec -T -u "${CODE_OWNER}" console app build

    if [ "$USE_MUTAGEN" = yes ]; then
        ws mutagen resume
    fi

    touch .my127ws/.flag-console-built
}

dynamic()
{
    ws external-images pull

    if [ "$CONSOLE_CONFIGURED" == true ]; then
        dynamic_console
    fi

    passthru "ws app build"
}

static_console()
{
    if [ "$HAS_ASSETS" = yes ]; then
        ws assets download
    fi
    passthru "${COMPOSE_BIN[@]}" up --build -d console
}

static()
{
    ws app build
}

initial_start()
{
    # Bring up all services apart from cron
    passthru "${COMPOSE_BIN[*]} config --services | grep -v -Fxe cron | xargs ${COMPOSE_BIN[*]} up -d"

    if [ "$CONSOLE_CONFIGURED" == true ]; then
        passthru "${COMPOSE_BIN[@]}" exec -T -u "${CODE_OWNER}" console app init
    fi

    if service_configured cron; then
        passthru "${COMPOSE_BIN[@]}" up -d cron
    fi
}

"enable_$1"
