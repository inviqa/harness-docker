pipeline {
    agent {
        docker {
            label 'linux-amd64'
            alwaysPull true
            image 'quay.io/inviqa_images/workspace:latest'
            args '--group-add docker --entrypoint "" --volume /var/run/docker.sock:/var/run/docker.sock --volume "$HOME/.my127:/root/.my127"'
        }
    }
    environment {
        COMPOSE_DOCKER_CLI_BUILD = 1
        DOCKER_BUILDKIT = 1
        MY127WS_KEY = credentials('base-my127ws-key-20190523')
    }
    options {
        buildDiscarder(logRotator(daysToKeepStr: '30'))
    }
    triggers { cron(env.BRANCH_NAME ==~ /^(master|main|\d+\.\d+\.x)$/ ? 'H H(2-6) * * 1' : '') }
    stages {
        stage('Quality Checks') {
            steps {
                sh '.ci/quality'
                milestone(10)
            }
        }
        stage('Quality Tests') {
            environment {
                TEARDOWN_ENVIRONMENT = "no"
                TEST_MODE = "quality"
            }
            steps {
                sh '.ci/test static'
                sh '.ci/test dynamic'
                sh '.ci/test dynamic mutagen'
                sh '.ci/test static-all-services'
                sh '.ci/test static-console-disabled'
                sh '.ci/test dynamic-console-disabled'
                milestone(20)
            }
        }
        stage('Acceptance Tests') {
            environment {
                REUSE_EXISTING_WORKSPACE = "yes"
                TEST_MODE = "acceptance"
            }
            stages {
                stage('Static') {
                    steps { sh '.ci/test static' }
                }
                stage('Dynamic') {
                    steps { sh '.ci/test dynamic' }
                }
                stage('Mutagen') {
                    steps { sh '.ci/test dynamic mutagen' }
                }
                stage('Static - All Services') {
                    steps { sh '.ci/test static-all-services' }
                }
                stage('Static - Console disabled') {
                    steps { sh '.ci/test static-console-disabled' }
                }
                stage('Dynamic - Console disabled') {
                    steps { sh '.ci/test dynamic-console-disabled' }
                }
            }
        }
    }
    post {
        always {
            cleanWs()
        }
    }
}
